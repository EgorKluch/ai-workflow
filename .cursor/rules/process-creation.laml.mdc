---
description: 
globs: 
alwaysApply: true
---
```yaml
$meta:
  name: 'processCreationMethodology'
  goal: 'systematicProcessDefinition'
  domain: 'process.creation.methodology'
  apply: 'processConfigurationFiles'
  version: 1.0
  purpose: "Methodology for creating well-structured processes in config.yaml based on conversation analysis and established patterns"
  domains:
    - 'process.creation.methodology'
    - 'configuration.management.system' 
    - 'workflow.definition.specification'

# === PRINCIPLES ===
principles:
  purpose: "Core beliefs for process creation and definition"

  conversationDrivenAnalysis:
    belief: "Process requirements emerge from careful analysis of user conversations and identified needs"
    application: "Extract process patterns from dialogue context and user-expressed pain points"
    benefits:
      - "Process definitions reflect actual user workflows"
      - "Natural alignment between conversation needs and process capabilities"
      - "Context-aware process scoping and responsibility definition"

  independentResponsibility:
    belief: "Each process must have narrow, well-defined scope without dependencies on other processes"
    application: "Define single-purpose processes with clear boundaries and autonomous operation"
    benefits:
      - "Clear accountability and ownership"
      - "Modular process architecture enabling flexible composition"
      - "Predictable process behavior and outcomes"

  clarificationTriggered:
    belief: "Processes should be self-sufficient but know when to request help through clarifySession()"
    application: "Each process includes one critical help criterion defining when assistance is needed"
    benefits:
      - "Autonomous operation within defined capabilities"
      - "Clear escalation path for ambiguous situations"
      - "Systematic handling of uncertainty and complexity"

# === RULES ===
rules:
  purpose: "Structure and requirements for process definition"

  processStructure:
    requiredElements:
      processName: "camelCase identifier describing process function"
      purpose: "Single-sentence description of process goal and responsibility scope"
      prompt: "Multi-line prompt following established template structure"
    
    promptTemplate:
      introduction: "You are responsible for [specific responsibility area]."
      tasks: "Your tasks: [bulleted list of specific actions]"
      guidelines: "Additional context and operational principles"
      criticalHelpCriterion: "CRITICAL HELP CRITERION: [specific condition requiring clarifySession()]"
      keyDeliverables: "Key deliverables: [focused outcomes for session work]"
      closingPrinciple: "Always [fundamental operational principle]."

    constraints:
      promptLength: "Maximum 30 lines including all sections"
      purposeLength: "Single sentence under 120 characters"
      deliverablesFocus: "Maximum 3 key deliverables focused on actionable outcomes"
      independentOperation: "No references to other processes or external dependencies"

  processResponsibility:
    scopeDefinition:
      narrowFocus: "Each process addresses one specific aspect of development workflow"
      clearBoundaries: "Well-defined scope preventing overlap with other processes" 
      autonomousOperation: "Process can execute within scope without external coordination"
      
    helpCriteria:
      singleCriterion: "Each process has exactly one CRITICAL HELP CRITERION"
      specificCondition: "Criterion defines precise situation requiring clarifySession()"
      actionableThreshold: "Clear threshold for when process cannot proceed independently"

# === WORKFLOWS ===
workflows:
  purpose: "Systematic approach to process creation"

  processCreationWorkflow:
    analyze: "Extract process patterns from conversation context and user needs"
    validate: "Check against existing processes for uniqueness and non-overlap"
    design: "Structure process following template requirements and principles"
    implement: "Add process to config.yaml maintaining file structure"
    verify: "Confirm process meets quality standards and operational requirements"

  conversationAnalysis:
    contextExtraction: "Identify recurring themes, pain points, and workflow patterns"
    responsibilityMapping: "Map identified needs to specific process responsibilities"
    scopeDefinition: "Define narrow, focused scope for each identified process"
    dependencyCheck: "Ensure process independence and autonomy"

# === SCENARIOS ===
scenarios:
  purpose: "Common situations for process creation"

  processCreation:
    triggers:
      - "Create new process"
      - "Add process to config"
      - "Define process for [specific responsibility]"
    description: "User needs new process added to configuration"
    workflow: "processCreationWorkflow"
    specialization:
      analyze: "Review conversation for process requirements and responsibility scope"
      validate: "Check existing config.yaml processes for overlap prevention"
      design: "Structure process following established template and constraints"
      implement: "Add process maintaining yaml structure and formatting"
    resources: ['conversationContext', 'existingProcesses', 'templateStructure']
    outcomes: ['newProcessDefinition', 'updatedConfigYaml']

  conversationBasedAnalysis:
    triggers:
      - "Analyze conversation for processes"
      - "Extract processes from discussion"
      - "Identify needed processes"
    description: "User wants processes derived from conversation analysis"
    workflow: "processCreationWorkflow"
    specialization:
      analyze: "Deep analysis of conversation patterns, user pain points, and workflow gaps"
      validate: "Cross-reference with existing processes to prevent duplication"
      design: "Create multiple processes based on identified patterns"
      implement: "Batch addition of processes to config.yaml"
    resources: ['fullConversationHistory', 'existingProcesses', 'workflowPatterns']
    outcomes: ['multipleProcessDefinitions', 'comprehensiveProcessSuite']

# === STANDARDS ===
standards:
  purpose: "Quality requirements for process definitions"

  processQuality:
    singlePurpose: "Each process solves exactly one specific workflow challenge"
    clearScope: "Well-defined boundaries preventing overlap with other processes"
    autonomousOperation: "Process can execute independently within defined scope"
    helpCriterion: "Single, specific CRITICAL HELP CRITERION for clarifySession()"
    actionableDeliverables: "Key deliverables focus on tangible work outcomes"
    templateCompliance: "Follows established prompt structure and formatting"

  configurationIntegrity:
    yamlStructure: "Maintains proper yaml formatting and indentation"
    namingConsistency: "Process names follow camelCase convention"
    structuralAlignment: "Aligns with existing config.yaml organization"
    nonDuplication: "No overlap with existing process functionality"

  mustDo:
    followTemplate: "MUST follow established prompt template structure"
    defineHelpCriterion: "MUST include single CRITICAL HELP CRITERION"
    maintainIndependence: "MUST ensure process independence from other processes"
    limitDeliverables: "MUST focus key deliverables on actionable session outcomes"
    validateUniqueness: "MUST confirm no duplication of existing functionality"

  canDo:
    adaptPromptStyle: "MAY adapt prompt language for specific process context"
    customizeDeliverables: "MAY tailor deliverables to process-specific outcomes"
    optimizeLength: "MAY optimize prompt length within 30-line constraint"
    specializeGuidelines: "MAY add process-specific guidelines and context"
```
